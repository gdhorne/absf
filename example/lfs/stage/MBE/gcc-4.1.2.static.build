################################################################################
#
# Programme Name: ABSF
# Application Name: absf.sh
# Description: An automated build system framework to build Linux from Scratch
#              from source code. 
#
# Package Name: gcc-4.1.2.static.build
# Description: Source code for the gcc package. Static build.
#
# Copyright (c) 2003 Gregory D. Horne (horne at member dot fsf dot org)
# 
################################################################################
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License (version 2), or 
#    (at your option) any later version, as published by the Free Software 
#    Foundation.
#
#    The software is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with the software; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA.
#
################################################################################


PROGRAMME=gcc-4.1.2
ARCHIVE=${PROGRAMME}.tar.bz2
PATCH=

###############################################################################
# Configure the source code for the package. The system builder can override
# this default action by including a user_configure() routine in the package
# build (*.build) specification.
###############################################################################

user_configure()
{
	local CWD=${PWD}
	mkdir ${ABSF_WORK}/${PROGRAMME}-build
	cd ${ABSF_WORK}/${PROGRAMME}-build

	CC="${MODE} -B/usr/bin/" ../${PROGRAMME}/configure \
		--prefix=${ABSF_BUILD_ROOT} \
		--with-local-prefix=${ABSF_BUILD_ROOT} --disable-nls \
		--enable-shared --enable-languages=c \
	> /dev/null 2>&1

	cd ${CWD}
}

###############################################################################
# Compile the source code for the package. The system builder can override
# this default action by including a user_compile() routine in the package
# build (*.build) specification.
###############################################################################

user_compile()
{
	local CWD=${PWD}
	cd ${ABSF_WORK}/${PROGRAMME}-build

	make -j ${COUNT} bootstrap > /dev/null 2>&1

	cd ${CWD}
}

###############################################################################
# Install the files associated with the package. The system builder can
# override this default action by including a user_install() routine in the
# package build (*.build) specification.
###############################################################################

user_install()
{
	local CWD=${PWD}
	cd ${ABSF_WORK}/${PROGRAMME}-build

	make install > /dev/null 2>&1
	ln -s gcc ${ABSF_BUILD_ROOT}/bin/cc > /dev/null 2>&1

	cd ${CWD}
}

###############################################################################
# Make adjustments to the build environment specific to the package.
# There is no default handler for user_fixup().
###############################################################################

user_fixup()
{
	gcc -dumpspecs | sed 's@^/lib/ld-linux.so.2@/tools&@g' \
  		> `dirname $(gcc -print-libgcc-file-name)`/specs

	GCC_INCLUDEDIR=`dirname $(gcc -print-libgcc-file-name)`/include &&
	find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rf '{}' \; &&
	rm -f `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
	unset GCC_INCLUDEDIR

        cc dummy.c
        readelf -l a.out | grep ': /tools'
        rm -f a.out
}
